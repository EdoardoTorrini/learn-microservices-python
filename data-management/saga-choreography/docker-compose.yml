services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_saga_choreography
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "15672:15672"  # Management UI
      - "5672:5672"    # AMQP port
    networks:
      saga-choreography-net:
        ipv4_address: 172.20.10.4
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mysql:
    image: mysql:8.0
    container_name: mysql_saga_choreography
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: db
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    networks:
      saga-choreography-net:
        ipv4_address: 172.20.10.3
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -padmin -e 'SELECT * FROM db.init_complete LIMIT 1;' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20

  order-service:
    build: ./order-service
    container_name: order-service
    environment:
      DB_HOST: mysql_saga_choreography
      DB_PORT: "3306"
      DB_USER: root
      DB_PASSWORD: admin
      DB_NAME: db
      RABBITMQ_URL: "amqp://admin:admin@rabbitmq_saga_choreography:5672/?heartbeat=300"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      saga-choreography-net:
        ipv4_address: 172.20.10.11
    restart: unless-stopped

  payment-service:
    build: ./payment-service
    container_name: payment-service
    environment:
      DB_HOST: mysql_saga_choreography
      DB_PORT: "3306"
      DB_USER: root
      DB_PASSWORD: admin
      DB_NAME: db
      RABBITMQ_URL: "amqp://admin:admin@rabbitmq_saga_choreography:5672/?heartbeat=300"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      saga-choreography-net:
        ipv4_address: 172.20.10.12
    restart: unless-stopped

  # inventory-service:
  #   build: ./inventory-service
  #   container_name: inventory-service
  #   environment:
  #     DB_HOST: mysql_saga_choreography
  #     DB_PORT: "3306"
  #     DB_USER: root
  #     DB_PASSWORD: admin
  #     DB_NAME: db
  #     RABBITMQ_URL: "amqp://admin:admin@rabbitmq_saga_choreography:5672/?heartbeat=300"
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     mysql:
  #       condition: service_healthy
  #   networks:
  #     saga-choreography-net:
  #       ipv4_address: 172.20.10.13
  #   restart: unless-stopped

networks:
  saga-choreography-net:
    name: saga-choreography-net
    # driver: bridge
    ipam:
      config:
        - subnet: 172.20.10.0/24